public static Integer search(List<Opportunity> opportunities, Integer target){
    Integer iNbOppties = opportunities.size();
    Integer iLeft = 0, iRight = iNbOppties-1;
    Integer iMiddle, iEcart = iRight-iLeft+1;
    Boolean bDeadEnd = false;
    
    while (iEcart !=0 && !bDeadEnd ) {
        iMiddle = Integer.ValueOf( ((iLeft + iRight + 2)/2)-1 );
        if (opportunities[iMiddle].Amount == target) {
            return iMiddle;
        }
        else if (opportunities[iMiddle].Amount < target){
            iLeft = iMiddle;
            if (iRight - iLeft > iEcart) {iEcart = iRight - iLeft + 1 ;} else {bDeadEnd = true;}
        }
        else {
            iRight = iMiddle;
            if (iRight - iLeft > iEcart) {iEcart = iRight - iLeft +1 ;} else {bDeadEnd = true;}
        }
        if (iLeft == iRight && opportunities[iMiddle].Amount == target){
            return iLeft;
        }
    }
    return -1;
} 